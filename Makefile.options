########################################################################
#
# configurable options
#
########################################################################
HAS_CGNS  = yes 
HAS_HDF5  = yes 

#GO TO SMOOTH and MAIN AND DUMP MPI_INCLUDE and MPI_LIB for MAC!

########################################################################
# THIRD PARTY LIBRARY LOCATIONS
# These paths shoud be adjusted for the machine being compiled on.
########################################################################

#
# set architecture
#
ARCH = $(shell uname)

#CHANGE FOR MAC!
#ARCH = Linux-64
#ARCH = Linux-gcc
#ARCH = Darwin

ifeq ($(ARCH),Linux)
OS = $(shell uname -i)
ifeq ($(OS),x86_64)
	ARCH = Linux-64
endif
endif

# 
# set defaults for each of the architectures below.
#
LIBS = -lm
INTEL_CCOMPILER_PATH =
INTEL_LIB_PATH =
DEFINES =
INCLUDE_PATH = 
LIBRARY_PATH = 
CC  = mpic++
LINK = mpic++
RANLIB = ranlib
CPPFLAGS = $(DEFINES) -I.
EXE_SUFFIX = exe


########################################################################
# SunOS configuration
########################################################################
ifeq ($(ARCH),SunOS)
	COMP = CC
	LINK = CC -xarch=v9
	CFLAGS = -c -fast -xarch=v9
	LINKSTATIC = CC -xar -o
	LINKSHARED = CC -G -o
	EXE_SUFFIX = SUN64
endif

########################################################################
#  MAC OSX, using gcc compilers
########################################################################
ifeq ($(ARCH),Darwin)
        CGNS_INCLUDE_PATH  = /usr/local/include
        CGNS_LIB_PATH      = /usr/local/lib
        HDF5_INCLUDE_PATH = /usr/local/hdf5/include
        HDF5_LIB_PATH = /usr/local/hdf5/lib
#	MPI_INCLUDE_PATH  = /usr/local/openmpi/include
#	MPI_LIB_PATH      = /usr/local/openmpi/lib
        OCTREE_INCLUDE_PATH = /usr/local/OCTREE_LIBRARY
        OCTREE_LIB_PATH     = /usr/local/OCTREE_LIBRARY
        SPACING_INCLUDE_PATH = /usr/local/SPACING_FIELD
        SPACING_LIB_PATH = /usr/local/SPACING_FIELD
	COMP = mpic++
	LINK = mpic++
#	LINK = g++ -pg
#	CFLAGS = -c -g -Wall -DMACVERSION -D_DEBUG
	CFLAGS = -c -g -DMACVERSION -D_DEBUG
#	CFLAGS = -c -O3 -DMACVERSION -D_DEBUG
#	CFLAGS = -c -O3 -DMACVERSION
#	CFLAGS = -c -O3 -pg -DMACVERSION
	LINKSTATIC = ar rv
	LINKSHARED = ld -shared -o
	EXE_SUFFIX = MACOSX
endif

########################################################################
#  Linux, using gcc compilers
########################################################################
ifeq ($(ARCH),Linux-gcc)
	COMP = g++
	LINK = g++
#	CFLAGS = -c -g -Wall -D_DEBUG
	CFLAGS = -c -g -D_DEBUG
#	CFLAGS = -c -O3 -Wall -D_DEBUG
	LINKSTATIC = ar rv
	LINKSHARED = ld -shared -o
	EXE_SUFFIX = LINUX
endif

########################################################################
#  Linux-64, using intel compilers
########################################################################
ifeq ($(ARCH),Linux-64)
	#for openmpi-64
#	MPI_INCLUDE_PATH  = /usr/local/openmpi/include
#	MPI_LIB_PATH      = /usr/local/openmpi/lib
#	MPI_INCLUDE_PATH  = /usr/local/openmpi-1.2.6-patched-gcc64/include
#	MPI_LIB_PATH      = /usr/local/openmpi-1.2.6-patched-gcc64/lib
        HDF5_INCLUDE_PATH = /usr/local/hdf5-64-gcc/include
        HDF5_LIB_PATH = /usr/local/hdf5-64-gcc/lib
        CGNS_INCLUDE_PATH  = /simcenter/meshdev/cgns/cgns_3.0/release/3.0.5/src
        CGNS_LIB_PATH      = /simcenter/meshdev/cgns/cgns_3.0/release/3.0.5/src/LINUX64
        OCTREE_INCLUDE_PATH = /simcenter/meshdev/OCTREE_LIBRARY
        OCTREE_LIB_PATH = /simcenter/meshdev/OCTREE_LIBRARY
        SPACING_INCLUDE_PATH = /simcenter/meshdev/SPACING_FIELD
        SPACING_LIB_PATH = /simcenter/meshdev/SPACING_FIELD
#        INCLUDE_PATH += -I$(MPI_INCLUDE_PATH)
#        LIBRARY_PATH += -L$(MPI_LIB_PATH)
#	INTEL_CCOMPILER_PATH = /usr/local/intel/cce/9.1
#	INTEL_LIB_PATH = /usr/local/intel/cce/9.1/lib
#	INCLUDE_PATH += -I$(INTEL_CCOMPILER_PATH)
#	LIBRARY_PATH += -L$(INTEL_LIB_PATH)
#	COMP = /usr/local/mpich2-intel64/bin/mpicxx
#	LINK = /usr/local/mpich2-intel64/bin/mpicxx
#	COMP = mpic++
#	LINK = mpic++ -g
	COMP = g++
	LINK = g++
#	COMP = $(INTEL_CCOMPILER_PATH)/bin/icc
#	LINK = $(INTEL_CCOMPILER_PATH)/bin/icc
#	LIBS += -lstdc++ /usr/local/intel/cce/9.1/lib/libcxa.a -lunwind /usr/local/openmpi-1.2.6-patched-gcc64-static/lib/libmpi.a /usr/local/openmpi-1.2.6-patched-gcc64-static/lib/libopen-rte.a /usr/local/openmpi-1.2.6-patched-gcc64-static/lib/libopen-pal.a -lpthread /usr/lib64/librt.a /usr/lib64/libutil.a /usr/local/intel/cce/9.1/lib/libcxa.a
#	LIBS += -lstdc++ -lm /usr/local/openmpi-1.2.6-patched-gcc64-static/lib/libopen-rte.a  -lpthread -lnuma /usr/lib64/librt.a /usr/lib64/libutil.a /usr/local/intel/cce/9.1/lib/libcxa.a /usr/local/intel/cce/9.1/lib/libunwind.a
#	LIBS += -lcgns -lcxa -lunwind -lstdc++ -lmpi -lpthread -lnuma
#	CFLAGS = -c -g -p64 -DLINUXVERSION -D_DEBUG
#	CFLAGS = -c -g -Wall -DLINUXVERSION -D_DEBUG
#	CFLAGS = -c -g -DLINUXVERSION
#	CFLAGS = -c -O3 -Wall -m64 -DLINUXVERSION -D_DEBUG
#	CFLAGS = -c -O3 -m64 -DLINUXVERSION
	CFLAGS = -c -O3 -DLINUXVERSION
	LINKSTATIC = ar rv
	LINKSHARED = ld -shared -o
	EXE_SUFFIX = LINUX64
endif

#
# add in appropriate include paths and defines based on third party library
# locations.
#

INCLUDE_PATH += -I$(OCTREE_INCLUDE_PATH)
LIBRARY_PATH += -L$(OCTREE_LIB_PATH)

INCLUDE_PATH += -I$(SPACING_INCLUDE_PATH)
LIBRARY_PATH += -L$(SPACING_LIB_PATH)

#INCLUDE_PATH += -I$(METIS_INCLUDE_PATH)
#LIBRARY_PATH += -L$(METIS_LIB_PATH)

INCLUDE_PATH += -I$(CGNS_INCLUDE_PATH)
LIBRARY_PATH += -L$(CGNS_LIB_PATH)

INCLUDE_PATH += -I$(HDF5_INCLUDE_PATH)
LIBRARY_PATH += -L$(HDF5_LIB_PATH)

INCLUDE_PATH += -I../include

